version: '2'
services:
  zookeeper1:
    image: harisekhon/hbase:1.3
    container_name: zookeeper_1
    restart: always
    ports:
      - 2181:2181
      - 8080:8080
      - 8085:8085
      - 9090:9090
      - 9095:9095
      - 16000:16000
      - 16010:16010
      - 16201:16201
      - 16301:16301

  kafka1:
    image: wurstmeister/kafka:0.10.2.0 
    container_name: kafka_1
    command:
      - /bin/sh 
      - -c
      - |
          start-kafka.sh &
          sleep 10
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic original_request
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic hash_map
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic block_info
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_1
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_2
          sleep 100000h
    ports:
      - "9091:9092"
    links:
      - zookeeper1:zookeeper
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=192.168.71.144
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nimbus1:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: nimbus_1
    command: 
      - /bin/sh
      - -c
      - |
          jstorm nimbus &
          sleep 100
          cd /tmp
          jstorm jar kafkaprocedure-1.0-SNAPSHOT-jar-with-dependencies.jar topology.KafkaTopology 0 > /tmp/nimbus1.log 2>&1 
          sleep 100000h
    depends_on:
      - zookeeper1
    links:
      - zookeeper1:zookeeper
    ports:
      - 6621:6627
    volumes: # docker.sock is mapped as the default CORE_VM_ENDPOINT
      - /tmp:/tmp

  supervisor1:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: supervisor_1
    command: jstorm supervisor
    depends_on:
      - zookeeper1
    links:
      - nimbus1
      - zookeeper1:zookeeper
    volumes:
      - /tmp:/tmp
      
      
      
      
      
  zookeeper2:
    image: wurstmeister/zookeeper
    container_name: zookeeper_2
    restart: always
    ports:
      - "2182:2181"

  kafka2:
    image: wurstmeister/kafka:0.10.2.0 
    container_name: kafka_2
    command:
      - /bin/sh 
      - -c
      - |
          start-kafka.sh &
          sleep 20
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic original_request
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic hash_map
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic block_info
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_1
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_2
          sleep 100000h
    ports:
      - "9092:9092"
    links:
      - zookeeper2:zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.71.144
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nimbus2:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: nimbus_2
    command: 
      - /bin/sh
      - -c
      - |
          jstorm nimbus &
          sleep 80
          cd /tmp
          jstorm jar kafkaprocedure-1.0-SNAPSHOT-jar-with-dependencies.jar topology.KafkaTopology 1 > /tmp/nimbus2.log 2>&1 
          sleep 100000h
    depends_on:
      - zookeeper2
    links:
      - zookeeper2:zookeeper
    ports:
      - 6622:6627
    volumes: # docker.sock is mapped as the default CORE_VM_ENDPOINT
      - /tmp:/tmp

  supervisor2:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: supervisor_2
    command: jstorm supervisor
    depends_on:
      - zookeeper2
    links:
      - nimbus2
      - zookeeper2:zookeeper
    volumes:
      - /tmp:/tmp
      
      
      
      
      

  zookeeper3:
    image: wurstmeister/zookeeper
    container_name: zookeeper_3
    restart: always
    ports:
      - "2183:2181"

  kafka3:
    image: wurstmeister/kafka:0.10.2.0 
    container_name: kafka_3
    command:
      - /bin/sh 
      - -c
      - |
          start-kafka.sh &
          sleep 20
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic original_request
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic hash_map
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic block_info
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_1
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_2
          sleep 100000h
    ports:
      - "9093:9092"
    links:
      - zookeeper3:zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.71.144
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nimbus3:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: nimbus_3
    command: 
      - /bin/sh
      - -c
      - |
          jstorm nimbus &
          sleep 80
          cd /tmp
          jstorm jar kafkaprocedure-1.0-SNAPSHOT-jar-with-dependencies.jar topology.KafkaTopology 2 > /tmp/nimbus3.log 2>&1 
          sleep 100000h
    depends_on:
      - zookeeper3
    links:
      - zookeeper3:zookeeper
    ports:
      - 6623:6627
    volumes: # docker.sock is mapped as the default CORE_VM_ENDPOINT
      - /tmp:/tmp

  supervisor3:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: supervisor_3
    command: jstorm supervisor
    depends_on:
      - zookeeper3
    links:
      - nimbus3
      - zookeeper3:zookeeper
    volumes:
      - /tmp:/tmp
      
      
      
      
      
  zookeeper4:
    image: wurstmeister/zookeeper
    container_name: zookeeper_4
    restart: always
    ports:
      - "2184:2181"

  kafka4:
    image: wurstmeister/kafka:0.10.2.0 
    container_name: kafka_4
    command:
      - /bin/sh 
      - -c
      - |
          start-kafka.sh &
          sleep 20
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic original_request
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic hash_map
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic block_info
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_1
          kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic vote_2
          sleep 100000h
    ports:
      - "9094:9092"
    links:
      - zookeeper4:zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.71.144
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nimbus4:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: nimbus_4
    command: 
      - /bin/sh
      - -c
      - |
          jstorm nimbus &
          sleep 80
          cd /tmp
          jstorm jar kafkaprocedure-1.0-SNAPSHOT-jar-with-dependencies.jar topology.KafkaTopology 3 > /tmp/nimbus4.log 2>&1 
          sleep 100000h
    depends_on:
      - zookeeper4
    links:
      - zookeeper4:zookeeper
    ports:
      - 6624:6627
    volumes: # docker.sock is mapped as the default CORE_VM_ENDPOINT
      - /tmp:/tmp

  supervisor4:
    image: cranelana/jstorm-2.2.1:v2.2.1
    container_name: supervisor_4
    command: jstorm supervisor
    depends_on:
      - zookeeper4
    links:
      - nimbus4
      - zookeeper4:zookeeper
    volumes:
      - /tmp:/tmp
